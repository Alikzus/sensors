#!/usr/bin/env perl
#
# ups for OpenBSD sensorsd(8)
#
# Usage: Trigger with sensorsd(8)
#
# Copyright (c) 2014-2016, Joel A. Nilsson <joel@alikzus.se>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
# FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
# OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.
#

# TODO
# Can the monitor reading be made more flexible?

use 5.20.2;
use strict;
use warnings;

# Read the monitors.
my $ac_present;
if ( `sysctl -n hw.sensors.upd0.indicator4` =~ m/^On/ ) {
    $ac_present = 1;
}
my $charging;
if ( `sysctl -n hw.sensors.upd0.indicator0` =~ m/^On/ ) {
    $charging = 1;
}
my $discharging;
if ( `sysctl -n hw.sensors.upd0.indicator1` =~ m/^On/ ) {
    $discharging = 1;
}

# Shutdown if the UPS is offline, otherwise do nothing.
my @LOGGER = ( '/usr/bin/logger', '-t', 'sensorsd' );
if ( !$ac_present && !$charging && $discharging ) {
    system( @LOGGER, 'UPS offline' );
    exec( 'halt', '-p' );
} 
else {
    system( @LOGGER, 'UPS online' );
}

exit;

################################################################################
# Last updated: 2017-06-24 13:37:00 CEST
